input {
  file {
    type => "nginx_access"
    path => "/var/log/nginx/symfony_access.log"
    start_position => beginning
  }
  file {
      type         => "php-error"
      path         => "/var/www/booker-symfony-api/var/log/php_test.log"
      start_position => beginning
    }
}

filter {
    if[type]=="nginx_access"{
  grok {
        patterns_dir => "/usr/share/logstash/pipeline/patterns"
        match => { "message" => "%{NGINX_ACCESS}"}
  }
 mutate {
   convert => ["response", "integer"]
   convert => ["bytes", "integer"]
   convert => ["responsetime", "float"]
 }
 geoip {
   source => "clientip"
   target => "geoip"
   add_tag => [ "nginx-geoip" ]
 }
 date {
   match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
   remove_field => [ "timestamp" ]
 }
 useragent {
   source => "agent"
 }
 }
     if[type]=="php-error"{

 mutate {
     gsub         => [
       "message", "/var/www", "",
       "message", "/var/www", "",
       "path",    "/var/www", ""
     ]
   }

     grok {
         patterns_dir => "/usr/share/logstash/pipeline/patterns"
         match => { "message" => "%{PHP_ERROR}"}
         add_field    => { "timestamp" => "%{day}-%{month}-%{year} %{time}" }
         add_tag      => [ "%{level}" ]
         remove_field => [ "day", "month", "year", "time" ]
       }
       date {
         match        => [ "timestamp" , "dd-MM-YYYY HH:mm:ss" ]
         target       => "@timestamp"
         remove_field => "timestamp"
       }

   mutate {
     uppercase => [ "level" ]
     gsub      => [
       "tags",  " ", "_",
       "level", " ", "_"
     ]
   }
 }
}

output {
if[type]=="nginx_access"{
  elasticsearch {
    index => "nginx"
    hosts => ["elasticsearch:9200"]
  }
  }
  if[type]=="php-error"{
    elasticsearch {
      index => "php"
      hosts => ["elasticsearch:9200"]
    }
    }
}